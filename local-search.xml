<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>macOS iTerm2 开发环境配置</title>
    <link href="/2020/12/25/macos-iterm2-kai-fa-huan-jing-pei-zhi/"/>
    <url>/2020/12/25/macos-iterm2-kai-fa-huan-jing-pei-zhi/</url>
    
    <content type="html"><![CDATA[<h1 id="macOS-iTerm2-开发环境配置"><a href="#macOS-iTerm2-开发环境配置" class="headerlink" title="macOS iTerm2 开发环境配置"></a>macOS iTerm2 开发环境配置</h1><p><img src="https://riger.oss-cn-shanghai.aliyuncs.com/img/image-20201214140102118.png" alt="image-20201214140102118"></p><blockquote><p>注意：本文很多应用的安装都是走的Github，建议在科学上网环境中进行。</p></blockquote><h2 id="1-iTerm2-安装"><a href="#1-iTerm2-安装" class="headerlink" title="1. iTerm2 安装"></a>1. iTerm2 安装</h2><p>放弃使用系统自带Terminl， 在 <a href="https://iterm2.com/">iTerm2官网</a> 下载安装</p><div align="center"><img src="https://riger.oss-cn-shanghai.aliyuncs.com/img/image-20201214135558722.png" alt="image-20201214135558722" style="zoom:50%;" /></div><p>安装后打开，按上图，点击<code>Make iTerm2 Default Term</code>设置为默认终端</p><h2 id="2-安装Homebrew"><a href="#2-安装Homebrew" class="headerlink" title="2. 安装Homebrew"></a>2. 安装Homebrew</h2><p><a href="https://brew.sh/index_zh-cn"><code>Homebrew</code></a>自称是<code>MacOS</code>或<code>Linux</code>缺失的软件包管理器，使用它可以一行命令安装各种开发类工具及应用程序</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;<br></code></pre></div></td></tr></table></figure><h2 id="3-安装zsh"><a href="#3-安装zsh" class="headerlink" title="3. 安装zsh"></a>3. 安装zsh</h2><p><code>MacOS</code>自带<code>zsh</code>，不过版本比较老，我们使用<code>homebrew</code>安装最新版，并修改默认<code>shell</code>为自己下载的<code>zsh</code></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">brew install zsh<br>echo &quot;/usr/local/bin/zsh&quot; | sudo tee -a /etc/shells<br>chsh -s /usr/local/bin/zsh<br></code></pre></div></td></tr></table></figure><h2 id="4-安装ohmyzsh"><a href="#4-安装ohmyzsh" class="headerlink" title="4. 安装ohmyzsh"></a>4. 安装ohmyzsh</h2><p>运行下面的命名即可安装。 <a href="https://github.com/ohmyzsh/ohmyzsh">ohmyzsh官网</a>也可以去看看各种插件和主题。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;<br></code></pre></div></td></tr></table></figure><p><code>zsh</code>的配置文件在：<code>~/.zshrc</code>,后面的配置都在这里面，这里假设你会使用<code>vim</code>，不会可自行使用<code>Sublime</code>等编辑器。</p><h2 id="5-字体主题配置"><a href="#5-字体主题配置" class="headerlink" title="5. 字体主题配置"></a>5. 字体主题配置</h2><p>虽然主题这个东西是一个比较个性化的东西，但是我还是要隆重推荐一下<code>Grovbox</code>主题，我 的<code>IDE</code>、<code>iTerm</code> 和 <code>Vim</code>都用的这个主题:</p><p>Github 下载 iTerm2 的 <a href="https://github.com/AmmarCodes/gruvbox-material-iterm2">gruvbox-material</a> 主题, 双击安装</p><p>打开设置, Profiles, Default, Colors, 选择 <code>grovbox-material</code></p><p>安装Fira字体, 及其对应Nerd版(配合devicons使用)</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">brew tap homebrew/cask-fonts<br>// 这个是给idea, vscode之类用<br>brew cask install font-fira-code<br>// iTerm2 vim 专用<br>brew cask install font-fira-code-nerd-font<br></code></pre></div></td></tr></table></figure><p>打开<code>iTerm2</code>设置, Profiles, Default, Font,  选择 <code>Fira Code Nerd</code></p><p>参考ohmyzsh提供的这些 <a href="https://github.com/ohmyzsh/ohmyzsh/wiki/themes">主题</a>可以选一个自己喜欢的, 推荐agnoster</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd ~/Downloads<br>git clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git<br>cd oh-my-zsh-agnoster-fcamblor/<br>./install<br>vi .zshrc<br>ZSH_THEME=&quot;agnoster&quot;<br></code></pre></div></td></tr></table></figure><p>去掉路径中的用户名，设置<code>DEFAULT_USER</code>和你的用户名一直即可:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> .zshrc 里增加：</span><br>DEFAULT_USER=&quot;riger&quot;<br></code></pre></div></td></tr></table></figure><h2 id="6-插件安装及配置"><a href="#6-插件安装及配置" class="headerlink" title="6. 插件安装及配置"></a>6. 插件安装及配置</h2><p>安装一些好用的插件:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">brew install autojump<br>git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions<br>git clone git://github.com/zsh-users/zsh-syntax-highlighting $ZSH_CUSTOM/plugins/zsh-syntax-highlighting<br><br>vi .zshrc<br><span class="hljs-meta">#</span><span class="bash"> 修改如下</span><br>plugins=(<br>    git <br>    sublime<br>    zsh-autosuggestions<br>    autojump<br>    zsh-syntax-highlighting<br>)<br></code></pre></div></td></tr></table></figure><p>简单说明一下我开启的这些插件：</p><ul><li><code>git</code>: 默认就开启的，可以看到文章第一张图，路径上即可显示当前分支是在<code>Master</code>，还有很多方便使用的<code>alias</code></li></ul><p>我常用的有：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">ga=&#x27;git add&#x27;<br>gst=&#x27;git status&#x27;<br>gcmsg=&#x27;git commit -m&#x27;<br>glola=&#x27;git log --graph --pretty=&#x27;\&#x27;&#x27;%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27;\&#x27;&#x27; --all&#x27;<br><span class="hljs-meta">#</span><span class="bash"> 命令行输入 <span class="hljs-built_in">alias</span> 即可看到所有的<span class="hljs-built_in">alias</span></span><br></code></pre></div></td></tr></table></figure><ul><li><p><code>sublime</code>：<code>st 文件或路径</code>  使用<code>sublime</code>打开文件或路径；<code>stt</code> 打开当前路径</p></li><li><p><code>zsh-autosuggestions</code>：命令提示，用过的命令，按方向→自动完成</p></li></ul><p><img src="https://riger.oss-cn-shanghai.aliyuncs.com/img/image-20201227231810507.png" alt="image-20201227231810507"></p><ul><li><code>autojump</code>: <code>j + 关键字</code> 进入你最近去过的含关键字的路径，比如我进过<code>jdk</code>的路径，以后只要输入：</li></ul><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">j jdk<br></code></pre></div></td></tr></table></figure><p>就可以回到<code>jdk</code>路径，是不是很方便？</p><p><img src="https://riger.oss-cn-shanghai.aliyuncs.com/img/image-20201227232454896.png" alt="image-20201227232454896"></p><ul><li><code>zsh-syntax-highlighting</code>: <code>shell</code> 命令高亮，没有人能拒绝高亮。</li></ul><img src="https://riger.oss-cn-shanghai.aliyuncs.com/img/image-20200808150606814.png" alt="image-20200808150606814" style="zoom:50%;" /><h2 id="7-其他"><a href="#7-其他" class="headerlink" title="7. 其他"></a>7. 其他</h2><p>以后开发相关的配置都是放在<code>.zshrc</code>中的，比如<code>PATH</code>配置，一些脚本参数配置等。</p><p>还可以自行配置<code>Alias</code> 方便自己的使用，比如我配置的一些：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">alias py3=&quot;python3&quot;<br>alias openapk=&quot;open -a Finder app/build/outputs/apk&quot;<br>alias releaseapp=&quot;./gradlew assemblerelease&quot;<br>alias sqllogin=&quot;mysql -uroot -p123456&quot;<br>alias redisstart=&quot;redis-server /usr/local/etc/redis.conf&quot;<br>alias logcasher=&quot;pidcat net.worthtech.worthcasher&quot;<br>alias showAct=&quot;adb shell dumpsys activity top | grep ACTIVITY&quot;<br>alias starttom=&quot;~/Library/tomcat/bin/startup.sh&quot;<br>alias stoptom=&quot;~/Library/tomcat/bin/shutdown.sh&quot;<br>alias signapk=&quot;signtest app/build/outputs/apk/release/app-release-unsigned.apk&quot;<br>alias jmeter=&quot;~/dev/apache-jmeter-5.3/bin/jmeter&quot;<br>alias uninstallcasher=&quot;adb shell pm uninstall -k net.worthtech.worthcasher&quot;<br></code></pre></div></td></tr></table></figure><p>配置完后不要忘记让配置生效：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">source .zshrc<br></code></pre></div></td></tr></table></figure><p>Enjoy it !</p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iTerm2</tag>
      
      <tag>macOS</tag>
      
      <tag>zsh</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
